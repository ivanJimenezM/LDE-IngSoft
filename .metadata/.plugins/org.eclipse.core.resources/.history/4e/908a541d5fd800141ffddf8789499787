package IIS.LDE;

public class LinkedList {

	/* Double linked list header file */
	#ifndef DOUBLELINKEDLIST_H
	const DOUBLELINKEDLIST_H
	 
	/* Codes for various errors */
	const NOERROR 0x0
	const MEMALLOCERROR 0x01
	const LISTEMPTY 0x03
	const NODENOTFOUND 0x4
	 
	/* Double linked DoubleLinkedList definition */
	 typedef struct DoubleLinkedList
	{
	    int number;
	    struct DoubleLinkedList* pPrevious;
	    struct DoubleLinkedList* pNext;
	}DoubleLinkedList;
	 
	/* Get data for each node */
	extern DoubleLinkedList* GetNodeData(DoubleLinkedList* pNode);
	 
	/*  Add a new node forward */
	extern void AddNodeForward(void);
	 
	/* Add a new node in the reverse direction */
	extern void AddNodeReverse(void);
	 
	/* Display nodes in forward direction */
	extern void DisplayNodeForward(void);
	 
	/*Display nodes in reverse direction */
	extern void DisplayNodeReverse(void);
	 
	 
	/* Delete nodes in the DoubleLinkedList by searching for a node */
	extern void DeleteNode(const int number);
	 
	/* Function to detect cycle in a Double Linked List */
	extern unsigned int DetectCycleinList(void);
	 
	/*Funtion to reverse nodes */
	extern void ReverseNodes(void);
	 
	/* function to display error message that DoubleLinkedList is empty */
	void ErrorMessage(const int Error);
	 
	#endif
	
}
